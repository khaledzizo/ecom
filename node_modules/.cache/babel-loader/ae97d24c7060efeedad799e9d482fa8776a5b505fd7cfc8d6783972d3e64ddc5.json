{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ELMDINA\\\\Desktop\\\\Route-Ecommerce-main\\\\src\\\\Components\\\\Authentication\\\\VerifyResetPassword\\\\VerifyResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useFormik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function VerifyResetPassword() {\n  _s();\n  // Navigating to Login Page\n  let navigate = useNavigate();\n\n  // Error Message For Account\n  let [codeMessage, setCodeMessage] = useState(\"\");\n\n  // Button Loading\n  let [loading, setLoading] = useState(false);\n\n  // Form Validation\n  let formValidation = Yup.object({\n    resetCode: Yup.string().required(\"Code field cannot be empty\").matches(/^[0-9]{5,6}$/, \"Enter a valid code number\")\n  });\n\n  // Taking verify code\n  async function verifyResetCode(verifyCode) {\n    setLoading(true);\n    let request = await axios.post(\"https://ecommerce.routemisr.com/api/v1/auth/verifyResetCode\", verifyCode).catch(err => {\n      setLoading(false);\n      setCodeMessage(err.response.data.message);\n    });\n    if (request.data.status === 'Success') {\n      setLoading(false);\n      navigate('/resetPassword');\n    }\n  }\n  let formik = useFormik({\n    initialValues: {\n      resetCode: \"\"\n    },\n    onSubmit: verifyResetCode,\n    validationSchema: formValidation\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"fw-bolder mb-4\",\n        children: \"Enter the code to verify your account.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), codeMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: codeMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-floating mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"resetCode\",\n            className: \"form-control mb-3\",\n            id: \"resetCode\",\n            placeholder: \"000000\",\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"resetCode\",\n            children: \"reset password code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), formik.errors.resetCode && formik.touched.resetCode ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-circle-exclamation me-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), formik.errors.resetCode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this) : null, loading ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn bg-main text-white align-self-start\",\n            disabled: !(formik.isValid && formik.dirty),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-spinner fa-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn bg-main text-white align-self-start\",\n            children: \"send code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(VerifyResetPassword, \"h7uhbjiqUh0rdAMMJT/FWpe78lw=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = VerifyResetPassword;\nvar _c;\n$RefreshReg$(_c, \"VerifyResetPassword\");","map":{"version":3,"names":["axios","useFormik","React","useState","useNavigate","Yup","jsxDEV","_jsxDEV","Fragment","_Fragment","VerifyResetPassword","_s","navigate","codeMessage","setCodeMessage","loading","setLoading","formValidation","object","resetCode","string","required","matches","verifyResetCode","verifyCode","request","post","catch","err","response","data","message","status","formik","initialValues","onSubmit","validationSchema","children","className","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","type","id","placeholder","onChange","handleChange","onBlur","handleBlur","htmlFor","errors","touched","disabled","isValid","dirty","_c","$RefreshReg$"],"sources":["C:/Users/ELMDINA/Desktop/Route-Ecommerce-main/src/Components/Authentication/VerifyResetPassword/VerifyResetPassword.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\n\r\nexport default function VerifyResetPassword() {\r\n  // Navigating to Login Page\r\n  let navigate = useNavigate();\r\n\r\n  // Error Message For Account\r\n  let [codeMessage, setCodeMessage] = useState(\"\");\r\n\r\n  // Button Loading\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  // Form Validation\r\n  let formValidation = Yup.object({\r\n    resetCode: Yup.string()\r\n      .required(\"Code field cannot be empty\")\r\n      .matches(/^[0-9]{5,6}$/, \"Enter a valid code number\"),\r\n  });\r\n\r\n  // Taking verify code\r\n  async function verifyResetCode(verifyCode) {\r\n    setLoading(true)\r\n    let request = await axios\r\n      .post(\r\n        \"https://ecommerce.routemisr.com/api/v1/auth/verifyResetCode\",\r\n        verifyCode\r\n      )\r\n      .catch((err) => {\r\n        setLoading(false)\r\n        setCodeMessage(err.response.data.message);\r\n      });\r\n\r\n      if(request.data.status === 'Success'){\r\n        setLoading(false);\r\n        navigate('/resetPassword')\r\n      }\r\n  }\r\n\r\n  let formik = useFormik({\r\n    initialValues: {\r\n      resetCode: \"\",\r\n    },\r\n    onSubmit: verifyResetCode,\r\n    validationSchema: formValidation,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-5\">\r\n        <h3 className=\"fw-bolder mb-4\">\r\n          Enter the code to verify your account.\r\n        </h3>\r\n\r\n        {codeMessage ? (\r\n          <div className=\"alert alert-danger\">{codeMessage}</div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <div className=\"form-floating mb-3\">\r\n            <input\r\n              type=\"resetCode\"\r\n              className=\"form-control mb-3\"\r\n              id=\"resetCode\"\r\n              placeholder=\"000000\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n            <label htmlFor=\"resetCode\">reset password code</label>\r\n            {formik.errors.resetCode && formik.touched.resetCode ? (\r\n              <p className=\"text-danger\">\r\n                <i className=\"fa-solid fa-circle-exclamation me-2\"></i>\r\n                {formik.errors.resetCode}\r\n              </p>\r\n            ) : null}\r\n\r\n            {loading ? (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn bg-main text-white align-self-start\"\r\n                disabled={!(formik.isValid && formik.dirty)}\r\n              >\r\n                <i className=\"fa-solid fa-spinner fa-spin\"></i>\r\n              </button>\r\n            ) : (\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn bg-main text-white align-self-start\"\r\n              >\r\n                send code\r\n              </button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}