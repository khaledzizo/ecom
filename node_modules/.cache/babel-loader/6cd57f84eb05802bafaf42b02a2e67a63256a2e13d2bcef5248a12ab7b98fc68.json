{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ELMDINA\\\\Desktop\\\\Route-Ecommerce-main\\\\src\\\\Context\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { createContext, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let CartContext = /*#__PURE__*/createContext();\nexport function CartContextProvider({\n  children\n}) {\n  _s();\n  let [numOfCartItems, setNumOfCartItems] = useState(0);\n  let [loading, setLoading] = useState(false);\n  let [cartData, setCartData] = useState(null);\n\n  // Adding to Cart\n  async function addToCart(productId) {\n    const body = {\n      productId: productId\n    };\n    const headersOptions = {\n      token: localStorage.getItem(\"userToken\")\n    };\n    try {\n      const request = await axios.post(\"https://ecommerce.routemisr.com/api/v1/cart\", body, {\n        headers: headersOptions\n      });\n      if (request.data.status === \"success\") {\n        toast.success(\"Product added successfully. ðŸ˜Š\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"colored\"\n        });\n        setNumOfCartItems(request.data.numOfCartItems);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  // Get Logged user cart\n  async function getUserCart() {\n    const headersOptions = {\n      token: localStorage.getItem(\"userToken\")\n    };\n    setLoading(true);\n    try {\n      let request = await axios.get(\"https://ecommerce.routemisr.com/api/v1/cart\", {\n        headers: headersOptions\n      });\n      if (request.data.status === \"success\") {\n        setNumOfCartItems(request.data.numOfCartItems);\n        setCartData(request.data.data);\n      }\n      return request;\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  }\n  // Remove Specific Product from the Cart\n  async function removeFromCart(productId) {\n    const headersOptions = {\n      token: localStorage.getItem(\"userToken\")\n    };\n    setLoading(true);\n    try {\n      let request = await axios.delete(`https://ecommerce.routemisr.com/api/v1/cart/${productId}`, {\n        headers: headersOptions\n      });\n      if (request.data.status === \"success\") {\n        setNumOfCartItems(request.data.numOfCartItems);\n        setCartData(request.data.data);\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  }\n  // Clear user Cart\n  async function clearUserCart() {\n    const headersOptions = {\n      token: localStorage.getItem(\"userToken\")\n    };\n    setLoading(true);\n    try {\n      let request = await axios.delete(`https://ecommerce.routemisr.com/api/v1/cart`, {\n        headers: headersOptions\n      });\n      if (request.data.message === \"success\") {\n        setNumOfCartItems(0);\n        setCartData(null);\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  }\n  // Update user Cart\n  async function updateCart(productId, count) {\n    const body = {\n      count\n    };\n    const headersOptions = {\n      token: localStorage.getItem(\"userToken\")\n    };\n    setLoading(true);\n    try {\n      let request = await axios.put(`https://ecommerce.routemisr.com/api/v1/cart/${productId}`, body, {\n        headers: headersOptions\n      });\n      if (request.data.status === \"success\") {\n        setNumOfCartItems(request.data.numOfCartItems);\n        let productsList = request.data.data.products;\n        setCartData(request.data.data);\n        // Iterate over the products list\n        for (const product of productsList) {\n          if (product.product._id === productId && product.count < 1) {\n            await removeFromCart(productId);\n          }\n        }\n\n        // Check if the cart has only one product left and it has been removed\n        if (productsList.length === 1 && productsList[0].count === 0) {\n          await clearUserCart();\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  }\n  // checkout\n  async function checkoutSession(cartID, shippingData) {\n    const headersOptions = {\n      token: localStorage.getItem(\"userToken\")\n    };\n    let body = {\n      shippingAddress: {\n        details: \"details\",\n        phone: \"01010700999\",\n        city: \"Cairo\"\n      }\n    };\n    setLoading(true);\n    try {\n      let request = await axios.post(`https://ecommerce.routemisr.com/api/v1/orders/checkout-session/${cartID}?url=http://localhost:3000`, body, {\n        headers: headersOptions\n      });\n      if (request.data.status === \"success\") {\n        setNumOfCartItems(request.data.numOfCartItems);\n        setCartData(request.data.data);\n        window.open(request.data.session.url, '_self');\n      }\n      return request;\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      addToCart,\n      numOfCartItems,\n      setNumOfCartItems,\n      getUserCart,\n      loading,\n      cartData,\n      removeFromCart,\n      clearUserCart,\n      updateCart,\n      checkoutSession\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n_s(CartContextProvider, \"SPI5Ofi85OJWm+ehfP4xKMvc8aI=\");\n_c = CartContextProvider;\nvar _c;\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"names":["axios","createContext","useState","toast","jsxDEV","_jsxDEV","CartContext","CartContextProvider","children","_s","numOfCartItems","setNumOfCartItems","loading","setLoading","cartData","setCartData","addToCart","productId","body","headersOptions","token","localStorage","getItem","request","post","headers","data","status","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","err","console","log","getUserCart","get","removeFromCart","delete","clearUserCart","message","updateCart","count","put","productsList","products","product","_id","length","checkoutSession","cartID","shippingData","shippingAddress","details","phone","city","window","open","session","url","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ELMDINA/Desktop/Route-Ecommerce-main/src/Context/CartContext.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport let CartContext = createContext();\r\nexport function CartContextProvider({ children }) {\r\n  let [numOfCartItems, setNumOfCartItems] = useState(0);\r\n  let [loading, setLoading] = useState(false);\r\n  let [cartData, setCartData] = useState(null);\r\n\r\n  // Adding to Cart\r\n  async function addToCart(productId) {\r\n    const body = {\r\n      productId: productId,\r\n    };\r\n    const headersOptions = {\r\n      token: localStorage.getItem(\"userToken\"),\r\n    };\r\n    try {\r\n      const request = await axios.post(\r\n        \"https://ecommerce.routemisr.com/api/v1/cart\",\r\n        body,\r\n        {\r\n          headers: headersOptions,\r\n        }\r\n      );\r\n      if (request.data.status === \"success\") {\r\n        toast.success(\"Product added successfully. ðŸ˜Š\", {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"colored\",\r\n        });\r\n        setNumOfCartItems(request.data.numOfCartItems);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  // Get Logged user cart\r\n  async function getUserCart() {\r\n    const headersOptions = {\r\n      token: localStorage.getItem(\"userToken\"),\r\n    };\r\n    setLoading(true);\r\n    try {\r\n      let request = await axios.get(\r\n        \"https://ecommerce.routemisr.com/api/v1/cart\",\r\n        {\r\n          headers: headersOptions,\r\n        }\r\n      );\r\n      if (request.data.status === \"success\") {\r\n        setNumOfCartItems(request.data.numOfCartItems);\r\n        setCartData(request.data.data);\r\n      }\r\n      return request;\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n  // Remove Specific Product from the Cart\r\n  async function removeFromCart(productId) {\r\n    const headersOptions = {\r\n      token: localStorage.getItem(\"userToken\"),\r\n    };\r\n    setLoading(true);\r\n    try {\r\n      let request = await axios.delete(\r\n        `https://ecommerce.routemisr.com/api/v1/cart/${productId}`,\r\n        {\r\n          headers: headersOptions,\r\n        }\r\n      );\r\n      if (request.data.status === \"success\") {\r\n        setNumOfCartItems(request.data.numOfCartItems);\r\n        setCartData(request.data.data);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n  // Clear user Cart\r\n  async function clearUserCart() {\r\n    const headersOptions = {\r\n      token: localStorage.getItem(\"userToken\"),\r\n    };\r\n    setLoading(true);\r\n    try {\r\n      let request = await axios.delete(\r\n        `https://ecommerce.routemisr.com/api/v1/cart`,\r\n        {\r\n          headers: headersOptions,\r\n        }\r\n      );\r\n      if (request.data.message === \"success\") {\r\n        setNumOfCartItems(0);\r\n        setCartData(null);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n  // Update user Cart\r\n  async function updateCart(productId, count) {\r\n    const body = {\r\n      count,\r\n    };\r\n    const headersOptions = {\r\n      token: localStorage.getItem(\"userToken\"),\r\n    };\r\n    setLoading(true);\r\n    try {\r\n      let request = await axios.put(\r\n        `https://ecommerce.routemisr.com/api/v1/cart/${productId}`,\r\n        body,\r\n        {\r\n          headers: headersOptions,\r\n        }\r\n      );\r\n      if (request.data.status === \"success\") {\r\n        setNumOfCartItems(request.data.numOfCartItems);\r\n        let productsList = request.data.data.products;\r\n        setCartData(request.data.data);\r\n        // Iterate over the products list\r\n        for (const product of productsList) {\r\n          if (product.product._id === productId && product.count < 1) {\r\n            await removeFromCart(productId);\r\n          }\r\n        }\r\n\r\n        // Check if the cart has only one product left and it has been removed\r\n        if (productsList.length === 1 && productsList[0].count === 0) {\r\n          await clearUserCart();\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n  // checkout\r\n  async function checkoutSession(cartID, shippingData) {\r\n    const headersOptions = {\r\n      token: localStorage.getItem(\"userToken\"),\r\n    };\r\n\r\n    let body = {\r\n      shippingAddress: {\r\n        details: \"details\",\r\n        phone: \"01010700999\",\r\n        city: \"Cairo\",\r\n      },\r\n    };\r\n    setLoading(true);\r\n    try {\r\n      let request = await axios.post(\r\n        `https://ecommerce.routemisr.com/api/v1/orders/checkout-session/${cartID}?url=http://localhost:3000`,\r\n        body,\r\n        {\r\n          headers: headersOptions,\r\n        }\r\n      );\r\n      if (request.data.status === \"success\") {\r\n        setNumOfCartItems(request.data.numOfCartItems);\r\n        setCartData(request.data.data);\r\n        window.open(request.data.session.url, '_self')\r\n      }\r\n      return request;\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        addToCart,\r\n        numOfCartItems,\r\n        setNumOfCartItems,\r\n        getUserCart,\r\n        loading,\r\n        cartData,\r\n        removeFromCart,\r\n        clearUserCart,\r\n        updateCart,\r\n        checkoutSession,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,OAAO,IAAIC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AACxC,OAAO,SAASM,mBAAmBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChD,IAAI,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrD,IAAI,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC3C,IAAI,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,eAAec,SAASA,CAACC,SAAS,EAAE;IAClC,MAAMC,IAAI,GAAG;MACXD,SAAS,EAAEA;IACb,CAAC;IACD,MAAME,cAAc,GAAG;MACrBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,WAAW;IACzC,CAAC;IACD,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAC9B,6CAA6C,EAC7CN,IAAI,EACJ;QACEO,OAAO,EAAEN;MACX,CACF,CAAC;MACD,IAAII,OAAO,CAACG,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;QACrCxB,KAAK,CAACyB,OAAO,CAAC,gCAAgC,EAAE;UAC9CC,QAAQ,EAAE,WAAW;UACrBC,SAAS,EAAE,IAAI;UACfC,eAAe,EAAE,KAAK;UACtBC,YAAY,EAAE,IAAI;UAClBC,YAAY,EAAE,IAAI;UAClBC,SAAS,EAAE,IAAI;UACfC,QAAQ,EAAEC,SAAS;UACnBC,KAAK,EAAE;QACT,CAAC,CAAC;QACF1B,iBAAiB,CAACY,OAAO,CAACG,IAAI,CAAChB,cAAc,CAAC;MAChD;IACF,CAAC,CAAC,OAAO4B,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF;EACA;EACA,eAAeG,WAAWA,CAAA,EAAG;IAC3B,MAAMtB,cAAc,GAAG;MACrBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,WAAW;IACzC,CAAC;IACDT,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,IAAIU,OAAO,GAAG,MAAMvB,KAAK,CAAC0C,GAAG,CAC3B,6CAA6C,EAC7C;QACEjB,OAAO,EAAEN;MACX,CACF,CAAC;MACD,IAAII,OAAO,CAACG,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;QACrChB,iBAAiB,CAACY,OAAO,CAACG,IAAI,CAAChB,cAAc,CAAC;QAC9CK,WAAW,CAACQ,OAAO,CAACG,IAAI,CAACA,IAAI,CAAC;MAChC;MACA,OAAOH,OAAO;IAChB,CAAC,CAAC,OAAOe,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,SAAS;MACRzB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF;EACA;EACA,eAAe8B,cAAcA,CAAC1B,SAAS,EAAE;IACvC,MAAME,cAAc,GAAG;MACrBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,WAAW;IACzC,CAAC;IACDT,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,IAAIU,OAAO,GAAG,MAAMvB,KAAK,CAAC4C,MAAM,CAC7B,+CAA8C3B,SAAU,EAAC,EAC1D;QACEQ,OAAO,EAAEN;MACX,CACF,CAAC;MACD,IAAII,OAAO,CAACG,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;QACrChB,iBAAiB,CAACY,OAAO,CAACG,IAAI,CAAChB,cAAc,CAAC;QAC9CK,WAAW,CAACQ,OAAO,CAACG,IAAI,CAACA,IAAI,CAAC;MAChC;IACF,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,SAAS;MACRzB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF;EACA;EACA,eAAegC,aAAaA,CAAA,EAAG;IAC7B,MAAM1B,cAAc,GAAG;MACrBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,WAAW;IACzC,CAAC;IACDT,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,IAAIU,OAAO,GAAG,MAAMvB,KAAK,CAAC4C,MAAM,CAC7B,6CAA4C,EAC7C;QACEnB,OAAO,EAAEN;MACX,CACF,CAAC;MACD,IAAII,OAAO,CAACG,IAAI,CAACoB,OAAO,KAAK,SAAS,EAAE;QACtCnC,iBAAiB,CAAC,CAAC,CAAC;QACpBI,WAAW,CAAC,IAAI,CAAC;MACnB;IACF,CAAC,CAAC,OAAOuB,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,SAAS;MACRzB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF;EACA;EACA,eAAekC,UAAUA,CAAC9B,SAAS,EAAE+B,KAAK,EAAE;IAC1C,MAAM9B,IAAI,GAAG;MACX8B;IACF,CAAC;IACD,MAAM7B,cAAc,GAAG;MACrBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,WAAW;IACzC,CAAC;IACDT,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,IAAIU,OAAO,GAAG,MAAMvB,KAAK,CAACiD,GAAG,CAC1B,+CAA8ChC,SAAU,EAAC,EAC1DC,IAAI,EACJ;QACEO,OAAO,EAAEN;MACX,CACF,CAAC;MACD,IAAII,OAAO,CAACG,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;QACrChB,iBAAiB,CAACY,OAAO,CAACG,IAAI,CAAChB,cAAc,CAAC;QAC9C,IAAIwC,YAAY,GAAG3B,OAAO,CAACG,IAAI,CAACA,IAAI,CAACyB,QAAQ;QAC7CpC,WAAW,CAACQ,OAAO,CAACG,IAAI,CAACA,IAAI,CAAC;QAC9B;QACA,KAAK,MAAM0B,OAAO,IAAIF,YAAY,EAAE;UAClC,IAAIE,OAAO,CAACA,OAAO,CAACC,GAAG,KAAKpC,SAAS,IAAImC,OAAO,CAACJ,KAAK,GAAG,CAAC,EAAE;YAC1D,MAAML,cAAc,CAAC1B,SAAS,CAAC;UACjC;QACF;;QAEA;QACA,IAAIiC,YAAY,CAACI,MAAM,KAAK,CAAC,IAAIJ,YAAY,CAAC,CAAC,CAAC,CAACF,KAAK,KAAK,CAAC,EAAE;UAC5D,MAAMH,aAAa,CAAC,CAAC;QACvB;MACF;IACF,CAAC,CAAC,OAAOP,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,SAAS;MACRzB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF;EACA;EACA,eAAe0C,eAAeA,CAACC,MAAM,EAAEC,YAAY,EAAE;IACnD,MAAMtC,cAAc,GAAG;MACrBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,WAAW;IACzC,CAAC;IAED,IAAIJ,IAAI,GAAG;MACTwC,eAAe,EAAE;QACfC,OAAO,EAAE,SAAS;QAClBC,KAAK,EAAE,aAAa;QACpBC,IAAI,EAAE;MACR;IACF,CAAC;IACDhD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,IAAIU,OAAO,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAC3B,kEAAiEgC,MAAO,4BAA2B,EACpGtC,IAAI,EACJ;QACEO,OAAO,EAAEN;MACX,CACF,CAAC;MACD,IAAII,OAAO,CAACG,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;QACrChB,iBAAiB,CAACY,OAAO,CAACG,IAAI,CAAChB,cAAc,CAAC;QAC9CK,WAAW,CAACQ,OAAO,CAACG,IAAI,CAACA,IAAI,CAAC;QAC9BoC,MAAM,CAACC,IAAI,CAACxC,OAAO,CAACG,IAAI,CAACsC,OAAO,CAACC,GAAG,EAAE,OAAO,CAAC;MAChD;MACA,OAAO1C,OAAO;IAChB,CAAC,CAAC,OAAOe,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,SAAS;MACRzB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF;EAEA,oBACER,OAAA,CAACC,WAAW,CAAC4D,QAAQ;IACnBC,KAAK,EAAE;MACLnD,SAAS;MACTN,cAAc;MACdC,iBAAiB;MACjB8B,WAAW;MACX7B,OAAO;MACPE,QAAQ;MACR6B,cAAc;MACdE,aAAa;MACbE,UAAU;MACVQ;IACF,CAAE;IAAA/C,QAAA,EAEDA;EAAQ;IAAA4D,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAC9D,EAAA,CAxMeF,mBAAmB;AAAAiE,EAAA,GAAnBjE,mBAAmB;AAAA,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}