{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ELMDINA\\\\Desktop\\\\Route-Ecommerce-main\\\\src\\\\Components\\\\Authentication\\\\ResetPassword\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useFormik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ResetPassword() {\n  _s();\n  // Navigating to Login Page\n  let navigate = useNavigate();\n\n  // Error Message For Account\n  let [accountMessage, setAccountMessage] = useState(\"\");\n\n  // Button Loading\n  let [loading, setLoading] = useState(false);\n\n  // Form Validation\n  let formValidation = Yup.object({\n    email: Yup.string().required(\"Email field cannot be empty\").email(\"enter valid email\"),\n    newPassword: Yup.string().required(\"New Password field cannot be empty\").matches(/^[A-Z][a-zA-Z0-9@*+/-]{6,16}$/, \"Password must start with an uppercase letter and be between 6 and 16 characters long\")\n  });\n  async function resetPassword(updatedAccountInfo) {\n    setLoading(true);\n    let request = await axios.put(\"https://ecommerce.routemisr.com/api/v1/auth/resetPassword\", updatedAccountInfo).catch(err => {\n      setLoading(false);\n      setAccountMessage(err.response.data.message);\n    });\n    if (request !== null && request !== void 0 && request.data.token) {\n      setLoading(false);\n      navigate(\"/login\");\n    }\n  }\n  let formik = useFormik({\n    initialValues: {\n      email: \"\",\n      newPassword: \"\"\n    },\n    onSubmit: resetPassword,\n    validationSchema: formValidation\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"fs-3 fw-bolder mb-4\",\n        children: \"Reset Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), accountMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: accountMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"d-flex flex-column gap-3 mb-5\",\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email-container d-flex flex-column gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"emailInput\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"email\",\n            id: \"emailInput\",\n            name: \"email\",\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), formik.errors.email && formik.touched.email ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-circle-exclamation me-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), formik.errors.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-container d-flex flex-column gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"passwordInput\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"password\",\n            id: \"passwordInput\",\n            name: \"newPassword\",\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), formik.errors.newPassword && formik.touched.newPassword ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-circle-exclamation me-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), formik.errors.newPassword]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn bg-main text-white align-self-start\",\n          disabled: !(formik.isValid && formik.dirty),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-spinner fa-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn bg-main text-white align-self-start\",\n          children: \"reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(ResetPassword, \"aqw7pBLptW60BdLKLDQdiohRHuE=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["axios","useFormik","React","useState","useNavigate","Yup","jsxDEV","_jsxDEV","Fragment","_Fragment","ResetPassword","_s","navigate","accountMessage","setAccountMessage","loading","setLoading","formValidation","object","email","string","required","newPassword","matches","resetPassword","updatedAccountInfo","request","put","catch","err","response","data","message","token","formik","initialValues","onSubmit","validationSchema","children","className","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","htmlFor","type","id","name","onChange","handleChange","onBlur","handleBlur","errors","touched","disabled","isValid","dirty","_c","$RefreshReg$"],"sources":["C:/Users/ELMDINA/Desktop/Route-Ecommerce-main/src/Components/Authentication/ResetPassword/ResetPassword.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\n\r\nexport default function ResetPassword() {\r\n  // Navigating to Login Page\r\n  let navigate = useNavigate();\r\n\r\n  // Error Message For Account\r\n  let [accountMessage, setAccountMessage] = useState(\"\");\r\n\r\n  // Button Loading\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  // Form Validation\r\n  let formValidation = Yup.object({\r\n    email: Yup.string()\r\n      .required(\"Email field cannot be empty\")\r\n      .email(\"enter valid email\"),\r\n    newPassword: Yup.string()\r\n      .required(\"New Password field cannot be empty\")\r\n      .matches(\r\n        /^[A-Z][a-zA-Z0-9@*+/-]{6,16}$/,\r\n        \"Password must start with an uppercase letter and be between 6 and 16 characters long\"\r\n      ),\r\n  });\r\n\r\n  async function resetPassword(updatedAccountInfo) {\r\n    setLoading(true);\r\n    let request = await axios\r\n      .put(\r\n        \"https://ecommerce.routemisr.com/api/v1/auth/resetPassword\",\r\n        updatedAccountInfo\r\n      )\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        setAccountMessage(err.response.data.message);\r\n      });\r\n    if (request?.data.token) {\r\n      setLoading(false);\r\n      navigate(\"/login\");\r\n    }\r\n  }\r\n  let formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      newPassword: \"\",\r\n    },\r\n    onSubmit: resetPassword,\r\n    validationSchema: formValidation,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container mt-5\">\r\n        <h1 className=\"fs-3 fw-bolder mb-4\">Reset Your Password</h1>\r\n        {accountMessage ? (\r\n          <div className=\"alert alert-danger\">{accountMessage}</div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <form\r\n          className=\"d-flex flex-column gap-3 mb-5\"\r\n          onSubmit={formik.handleSubmit}\r\n        >\r\n          {/* Email Container */}\r\n          <div className=\"email-container d-flex flex-column gap-2\">\r\n            <label htmlFor=\"emailInput\">Email</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"email\"\r\n              id=\"emailInput\"\r\n              name=\"email\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n            {formik.errors.email && formik.touched.email ? (\r\n              <p className=\"text-danger\">\r\n                <i className=\"fa-solid fa-circle-exclamation me-2\"></i>\r\n                {formik.errors.email}\r\n              </p>\r\n            ) : null}\r\n          </div>\r\n          {/* Password Container */}\r\n          <div className=\"password-container d-flex flex-column gap-2\">\r\n            <label htmlFor=\"passwordInput\">New Password</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              id=\"passwordInput\"\r\n              name=\"newPassword\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n            {formik.errors.newPassword && formik.touched.newPassword ? (\r\n              <p className=\"text-danger\">\r\n                <i className=\"fa-solid fa-circle-exclamation me-2\"></i>\r\n                {formik.errors.newPassword}\r\n              </p>\r\n            ) : null}\r\n          </div>\r\n          {loading ? (\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn bg-main text-white align-self-start\"\r\n              disabled={!(formik.isValid && formik.dirty)}\r\n            >\r\n              <i className=\"fa-solid fa-spinner fa-spin\"></i>\r\n            </button>\r\n          ) : (\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn bg-main text-white align-self-start\"\r\n            >\r\n              reset Password\r\n            </button>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}